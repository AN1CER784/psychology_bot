from aiogram import F, Router
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession
from kbds.user_kb import headings_kb, first_heading_kb, third_heading_kb, second_heading_kb


user_router = Router()


@user_router.message(CommandStart())
async def start(message: Message, session: AsyncSession):
    """
    –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ

    :param message:
    :return:
    """
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, –¥—Ä—É–∑—å—è! üëã\n\n"
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ù–∞—Ç–∞–ª—å—è –õ—É–∫–∞—à–æ–≤–∞. üåü\n\n"
        "–Ø —Å–µ–º–µ–π–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥ —Å –±–æ–ª–µ–µ —á–µ–º 12-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –ø–∞—Ä–∞–º–∏ –∏ –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏. üß†\n\n"
        "–ó–∞ –≤—Å–µ —ç—Ç–∏ –≥–æ–¥—ã —è —É–±–µ–¥–∏–ª–∞—Å—å: –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ–∏–∑–±–µ–∂–Ω—ã, –µ—Å–ª–∏ –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ –∏—Ö –¥–æ—Å—Ç–∏—á—å. üåà‚ú®\n\n"
        "–ö–∞–∂–¥–∞—è –ø–∞—Ä–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞, –∏ –º–æ—è —Ä–∞–±–æ—Ç–∞ –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞—Å–∫—Ä—ã—Ç—å —ç—Ç—É —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å. üíëüîç\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è –∏ —Å–≤–æ–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è. ü§ñ‚ù§Ô∏è\n\n"
        "–ó–¥–µ—Å—å —è –¥–µ–ª—é—Å—å —Å–≤–æ–∏–º –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º –∏ –±—É–¥—É —Ä–∞–¥–∞ –≤–∞—à–µ–º—É —É—á–∞—Å—Ç–∏—é! üåüüôå\n\n"
        "–í—ã–±–∏—Ä–∞–π—Ç–µ —Ä—É–±—Ä–∏–∫—É, –∫–æ—Ç–æ—Ä–∞—è –∫–∞–∂–µ—Ç—Å—è –≤–∞–º –Ω–∞–∏–±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π. üìöüîé\n\n–ò–ª–∏ –∂–µ —Å—Ä–∞–∑—É –∑–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é‚úçÔ∏è",
        reply_markup=await headings_kb(session, message.from_user.id))


@user_router.callback_query(F.data == "heading_1")
async def first_heading(callback: CallbackQuery):
    """
    –í—ã–±–æ—Ä –ø–µ—Ä–≤–æ–π —Ä—É–±—Ä–∏–∫–∏

    :param callback:
    :return:
    """
    await callback.answer()
    await callback.message.edit_text("–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º —Ä—É–±—Ä–∏–∫–∏\n"
                                     "<b>–¢—Ä—É–¥–Ω–æ—Å—Ç–∏ –≤ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π</b> üßê", reply_markup=first_heading_kb)


@user_router.callback_query(F.data == "heading_2")
async def second_heading(callback: CallbackQuery):
    """
    –í—ã–±–æ—Ä –ø–µ—Ä–≤–æ–π —Ä—É–±—Ä–∏–∫–∏

    :param callback:
    :return:
    """
    await callback.answer()
    await callback.message.edit_text("–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º —Ä—É–±—Ä–∏–∫–∏\n"
                                     "<b>–ö–∞–∫ –Ω–∞–π—Ç–∏ —Å–ø—É—Ç–Ω–∏–∫–∞ –∂–∏–∑–Ω–∏?</b> üíï", reply_markup=second_heading_kb)


@user_router.callback_query(F.data == "heading_3")
async def third_heading(callback: CallbackQuery):
    """
    –í—ã–±–æ—Ä –ø–µ—Ä–≤–æ–π —Ä—É–±—Ä–∏–∫–∏

    :param callback:
    :return:
    """
    await callback.answer()
    await callback.message.edit_text(
        "<b>C–µ–ø–∞—Ä–∞—Ü–∏—è</b> ‚Äì —ç—Ç–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–¥–µ–ª–µ–Ω–∏—è —Ä–µ–±–µ–Ω–∫–∞ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π, –ø—Ä–æ—Ü–µ—Å—Å —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏\n\n"
        "–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º —Ä—É–±—Ä–∏–∫–∏\n"
        "<b>–°–µ–ø–∞—Ä–∞—Ü–∏—è</b> ‚úÇÔ∏è", reply_markup=third_heading_kb)
